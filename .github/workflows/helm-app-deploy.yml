name: Kind Cluster with example Helm chart

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - apps/**
      - .github/workflows/helm-app-deploy.yml

jobs:
  detect-updated-apps:
    runs-on: ubuntu-latest
    outputs:
      changed_folders: ${{ steps.get-changes.outputs.folders }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure full commit history

      - name: Ensure the main branch is available
        run: |
          git fetch origin main --depth=1

      - name: Get Changed Folders
        id: get-changes
        run: |
          ALL_CHANGED_FILES=$(git diff --name-only origin/main HEAD)
          echo "$ALL_CHANGED_FILES"
          CHANGED_FOLDERS=$(echo "$ALL_CHANGED_FILES" | tr ' ' '\n' | grep -E '^apps/[^/]+/example' | cut -d '/' -f2 | sort -u | jq -R -s -c 'split("\n")[:-1]')
          echo "Detected changes in: $CHANGED_FOLDERS"
          echo "folders=$CHANGED_FOLDERS" >> "$GITHUB_OUTPUT"

  test-updated-apps:
    needs: detect-updated-apps
    runs-on: ubuntu-latest
    if: ${{ needs.detect-updated-apps.outputs.changed_folders != '[]' }}  # Skip if no changed folders
    strategy:
      matrix:
        folder: ${{ fromJson(needs.detect-updated-apps.outputs.changed_folders) }}
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Check example helm chart exists
        run: |
          export APP=${{ matrix.folder }}
          ./scripts/example_chart_exists.sh

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Install Kind
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/latest/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind
          kind version

      - name: Create Kind Cluster
        run: |
          kind create cluster --name test-k8s
          kubectl cluster-info --context kind-test-k8s
          kind get kubeconfig -n test-k8s > "kcfg_local"

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Test - Install Helm chart
        run: |
          export APP=${{ matrix.folder }}
          export TEST_MODE=local
          ./scripts/deploy_example_chart.sh

      - name: Test - Uninstall Helm chart
        run: |
          export APP=${{ matrix.folder }}
          export TEST_MODE=local
          ./scripts/uninstall_example_chart.sh

  test-service-template:
    needs: detect-updated-apps
    runs-on: ubuntu-latest
    if: ${{ needs.detect-updated-apps.outputs.changed_folders != '[]' }}  # Skip if no changed folders
    strategy:
      matrix:
        folder: ${{ fromJson(needs.detect-updated-apps.outputs.changed_folders) }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Test - Show service templates install commands
        run: |
          export APP=${{ matrix.folder }}
          python3 ./scripts/utils.py kgst-install-deps $APP

      - name: Test - Render MultiClusterService
        run: |
          export APP=${{ matrix.folder }}
          python3 ./scripts/utils.py render-mcs $APP
