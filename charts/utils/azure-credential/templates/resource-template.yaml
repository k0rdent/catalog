apiVersion: v1
kind: ConfigMap
metadata:
  name: '{{ .Release.Name }}-resource-template'
  labels:
    k0rdent.mirantis.com/component: "kcm"
  annotations:
    projectsveltos.io/template: "true"
data:
  configmap.yaml: |
    {{`{{- $cluster := .InfrastructureProvider -}}`}}
    {{`{{- if not $cluster -}}`}}
      {{`{{- fail "Error: InfrastructureProvider not found" -}}`}}
    {{`{{- end -}}`}}

    {{`{{- $identity := (getResource "InfrastructureProviderIdentity") -}}`}}
    {{`{{- if not $identity -}}`}}
      {{`{{- fail "Error: InfrastructureProviderIdentity not found" -}}`}}
    {{`{{- end -}}`}}

    {{`{{- $secret := (getResource "InfrastructureProviderIdentitySecret") -}}`}}
    {{`{{- if not $secret -}}`}}
      {{`{{- fail "Error: InfrastructureProviderIdentitySecret not found" -}}`}}
    {{`{{- end -}}`}}

    {{`{{- $subnetName := "" -}}`}}
    {{`{{- $securityGroupName := "" -}}`}}
    {{`{{- $routeTableName := "" -}}`}}
    {{`{{- range $cluster.spec.networkSpec.subnets -}}`}}
      {{`{{- if eq .role "node" -}}`}}
        {{`{{- $subnetName = .name -}}`}}
        {{`{{- $securityGroupName = .securityGroup.name -}}`}}
        {{`{{- $routeTableName = .routeTable.name -}}`}}
        {{`{{- break -}}`}}
      {{`{{- end -}}`}}
    {{`{{- end -}}`}}
    {{`{{- $cloudConfig := dict
      "aadClientId" $identity.spec.clientID
      "aadClientSecret" (index $secret.data "clientSecret" | b64dec)
      "cloud" $cluster.spec.azureEnvironment
      "loadBalancerName" ""
      "loadBalancerSku" "Standard"
      "location" $cluster.spec.location
      "maximumLoadBalancerRuleCount" 250
      "resourceGroup" $cluster.spec.resourceGroup
      "routeTableName" $routeTableName
      "securityGroupName" $securityGroupName
      "securityGroupResourceGroup" $cluster.spec.networkSpec.vnet.resourceGroup
      "subnetName" $subnetName
      "subscriptionId" $cluster.spec.subscriptionID
      "tenantId" $identity.spec.tenantID
      "useInstanceMetadata" true
      "useManagedIdentityExtension" false
      "vmType" "vmss"
      "vnetName" $cluster.spec.networkSpec.vnet.name
      "vnetResourceGroup" $cluster.spec.networkSpec.vnet.resourceGroup
    -}}`}}
    ---
    apiVersion: v1
    kind: Secret
    metadata:
      name: azure-cloud-provider
      namespace: kube-system
    type: Opaque
    data:
      cloud-config: {{`{{ $cloudConfig | toJson | b64enc }}`}}
    ---
    apiVersion: storage.k8s.io/v1
    kind: StorageClass
    metadata:
      name: managed-csi
      annotations:
        storageclass.kubernetes.io/is-default-class: "true"
    provisioner: disk.csi.azure.com
    parameters:
      skuName: StandardSSD_LRS
    reclaimPolicy: Delete
    volumeBindingMode: WaitForFirstConsumer
    allowVolumeExpansion: true
