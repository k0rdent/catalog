tags:
  - Security
title: "ExternalDNS"
summary: "Synchronizes exposed Kubernetes Services and Ingresses with DNS providers."
logo: "https://github.com/kubernetes-sigs/external-dns/raw/master/docs/img/external-dns.png"
created: "2025-03-12T08:16:55Z"
description: |
    ExternalDNS makes Kubernetes resources discoverable via public DNS servers. Like KubeDNS, it retrieves a list of resources
    (Services, Ingresses, etc.) from the Kubernetes API to determine a desired list of DNS records. Unlike KubeDNS, however, it’s
    not a DNS server itself, but merely configures other DNS providers accordingly—e.g. AWS Route 53 or Google Cloud DNS.

    In a broader sense, ExternalDNS allows you to control DNS records dynamically via Kubernetes resources in a DNS provider-agnostic way.
charts:
  - name: external-dns
    versions: ['1.15.1']
deploy_code: |
    ~~~yaml
    apiVersion: k0rdent.mirantis.com/v1beta1
    kind: ClusterDeployment
    # kind: MultiClusterService
    ...
      serviceSpec:
        services:
          - template: external-dns-1-15-1
            name: external-dns
            namespace: external-dns
            values: |
              external-dns:
                provider:
                  name: cloudflare
                env:
                - name: CF_API_TOKEN
                  valueFrom:
                    secretKeyRef:
                      name: dns-tokens
                      key: cloudflare
    ~~~

    You need to have your DNS provider access secret in your managed cluster, e.g. for Cloudflare:
    ~~~bash
    CF_API_TOKEN=<your-cloudflare-api-token>
    kubectl create secret generic dns-tokens --from-literal=cloudflare=${CF_API_TOKEN} -n external-dns
    ~~~
doc_link: https://kubernetes-sigs.github.io/external-dns/latest/

validated_amd64: 'y'
validated_aws: 'y'
validated_azure: 'y'
validated_arm64: '-'
