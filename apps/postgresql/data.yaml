tags:
  - Database
title: PostgreSQL
summary: "Open source object-relational database known for reliability and data integrity."
logo: "./assets/postgres_logo.svg"
created: "2025-07-08T16:43:20Z"
description: |
  PostgreSQL is a powerful, open-source object-relational database system known for its reliability, rich feature set, and strong
  performance, backed by over 35 years of active development. It supports complex queries, extensibility, and full ACID compliance.

  PostgreSQL can be deployed and managed at scale using k0rdent, making it a robust choice for multi-cluster environments.
  The broader open source community offers extensive knowledge and support, helping users get started, deepen their expertise,
  and stay connected.
# support_link:
charts:
  - name: postgresql
    versions: ['16.7.21', '16.7.15']
  - name: ingress-nginx
    versions: ['4.13.0']
deploy_code: |
    ~~~yaml
    apiVersion: k0rdent.mirantis.com/v1beta1
    kind: MultiClusterService
    metadata:
      name: postgresql
    spec:
      clusterSelector:
        matchLabels:
          group: demo
      serviceSpec:
        services:
        - template: postgresql-16-7-21
          name: postgresql
          namespace: postgresql
          values: |
            postgresql:
              auth:
                postgresPassword: pgpasswd
                username: user
                password: passwd
                database: pgdb
        - template: ingress-nginx-4-13-0
          name: ingress-nginx
          namespace: postgresql
          values: |
            ingress-nginx:
              controller:
                service:
                  annotations:
                    service.beta.kubernetes.io/azure-load-balancer-health-probe-request-path: /healthz
                hostPort:
                  enabled: true
              tcp:
                5432: "postgresql/postgresql:5432"
    ~~~

    Use `ingress-nginx-controller` service address to connect to the database:
    ~~~bash
    PGPASSWORD=passwd psql -h af6cc412262a24d4b8c7ef2a868f8d79-235624655.eu-central-1.elb.amazonaws.com -p 5432 -U user -d pgdb
    ~~~

examples: |
    #### Install template to k0rdent
    ~~~bash
    helm upgrade --install postgresql oci://ghcr.io/k0rdent/catalog/charts/kgst --set "chart=postgresql:16.7.15" -n kcm-system
    helm upgrade --install ingress-nginx oci://ghcr.io/k0rdent/catalog/charts/kgst --set "chart=ingress-nginx:4.12.3" -n kcm-system
    ~~~

    #### Verify service template

    ~~~bash
    kubectl get servicetemplates -A
    # NAMESPACE    NAME                            VALID
    # kcm-system   postgresql-16-7-21              true
    # kcm-system   ingress-nginx-4-13-0            true
    ~~~

    #### Deploy PostgreSQL in replication mode

    ~~~yaml
    apiVersion: k0rdent.mirantis.com/v1beta1
    kind: MultiClusterService
    metadata:
      name: postgresql
    spec:
      clusterSelector:
        matchLabels:
          group: demo
      serviceSpec:
        services:
        - template: postgresql-16-7-21
          name: postgresql
          namespace: postgresql
          values: |
            postgresql:
              architecture: replication
              global:
                security:
                  allowInsecureImages: true
              image:
                repository: bitnamilegacy/postgresql
              auth:
                postgresPassword: admin
                username: user
                password: pass
                database: db
              readReplicas:
                replicaCount: 2
        - template: ingress-nginx-4-13-0
          name: ingress-nginx
          namespace: postgresql
          values: |
            ingress-nginx:
              controller:
                service:
                  annotations:
                    service.beta.kubernetes.io/azure-load-balancer-health-probe-request-path: /healthz
                hostPort:
                  enabled: true
              tcp:
                5432: "postgresql/postgresql-primary:5432"
                5433: "postgresql/postgresql-read:5432"
    ~~~

    Access "primary" replica using `5432` port to read/write operations.
    ~~~bash
    PGPASSWORD=passwd psql -h <ip-or-address> -p 5432 -U user -d pgdb
    ~~~

    Access "read" replica using `5433` port to read operations only.
    ~~~bash
    PGPASSWORD=passwd psql -h <ip-or-address> -p 5433 -U user -d pgdb
    ~~~

doc_link: https://github.com/bitnami/charts/tree/main/bitnami/postgresql

test_check_images_args: "--set postgresql.image.repository=bitnamilegacy/postgresql --set postgresql.global.security.allowInsecureImages=true"

validated_amd64: 'y'
validated_aws: 'y'
validated_azure: 'y'
validated_arm64: '-'
