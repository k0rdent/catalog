tags:
  - Networking
title: "Ingress-nginx"
summary: "Ingress controller for Kubernetes using NGINX as a reverse proxy and load balancer."
logo: "./assets/nginx_logo.svg"
created: "2025-03-12T08:16:55Z"
description: |
    The NGINX Ingress Controller is a solution for managing external access to applications running in a Kubernetes cluster.
    It acts as a reverse proxy and load balancer, routing traffic from outside the cluster to the appropriate services within.
    K0rdent, as a multi-cluster Kubernetes management platform, seamlessly integrates with the NGINX Ingress Controller to provide a unified solution for managing ingress across all your clusters. Here's how this integration works:
   
    - Simplified Deployment: K0rdent can automate the deployment and configuration of the NGINX Ingress Controller across your clusters, eliminating manual setup and ensuring consistency.
    - Centralized Management: Manage Ingress resources and configurations for all your clusters from the K0rdent control plane, providing a single point of control.
    - Policy-Driven Ingress: Leverage K0rdent's policy engine to enforce security and compliance policies for your Ingress configurations, ensuring consistency and best practices.
    - Monitoring and Observability: K0rdent integrates with monitoring tools to provide insights into the performance and health of your NGINX Ingress Controllers and the applications they expose
support_link: https://www.f5.com/products/nginx/nginx-ingress-controller
charts:
  - name: ingress-nginx
    versions: ['4.11.5']
deploy_code: |
    ~~~yaml
    apiVersion: k0rdent.mirantis.com/v1beta1
    kind: MultiClusterService
    metadata:
      name: ingress-nginx
    spec:
      clusterSelector:
        matchLabels:
          group: demo
      serviceSpec:
        services:
        - template: ingress-nginx-4-11-5
          name: ingress-nginx
          namespace: ingress-nginx
          values: |
            ingress-nginx:
              controller:
                service:
                  annotations:
                    service.beta.kubernetes.io/azure-load-balancer-health-probe-request-path: /healthz
                hostPort:
                  enabled: true
    ~~~
doc_link: https://kubernetes.github.io/ingress-nginx/
